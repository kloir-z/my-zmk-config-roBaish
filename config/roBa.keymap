#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        as_as_tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        qw_as_esc_lang2 {
            bindings = <&esc_lang2>;
            key-positions = <0 1>;
        };

        op_as_bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        lmin_as_enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        uo_as_lbrac {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 8>;
        };

        ip_as_rbrac {
            bindings = <&kp BACKSLASH>;
            key-positions = <7 9>;
        };

        jl_as_lparen {
            bindings = <&kp ASTERISK>;
            key-positions = <18 20>;
        };

        kmin_as_rparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 21>;
        };

        mdot_as_lbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 32>;
        };

        comslash_as_rbrace {
            bindings = <&kp PIPE>;
            key-positions = <31 33>;
        };

        df_as_muhenkan {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <13 12>;
        };

        jk_as_henkan {
            bindings = <&kp INT_HENKAN>;
            key-positions = <19 18>;
        };

        sd_as_smartshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <11 12>;
        };

        kl_as_smartshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 19>;
        };

        qwe_as_alt_f4 {
            bindings = <&kp LA(F4)>;
            key-positions = <0 2 1>;
        };

        we_as_capsword {
            bindings = <&caps_word>;
            key-positions = <1 2>;
        };

        io_as_capsword {
            bindings = <&caps_word>;
            key-positions = <7 8>;
        };

        up_as_lrbrac {
            bindings = <&brac>;
            key-positions = <6 9>;
        };

        jmin_as_lrparen {
            bindings = <&parent>;
            key-positions = <18 21>;
        };
    };

    macros {
        parent: parent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ASTRK &kp LEFT_PARENTHESIS &kp LEFT>;
            label = "PARENT";
        };

        brac: brac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp BACKSLASH &kp LEFT>;
            label = "BRAC";
        };

        esc_lang2: esc_lang2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp LANGUAGE_2>;
            label = "ESC_LANG2";
        };
    };

    behaviors {
        smart_shift: smart_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "SMART_SHIFT";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E  &kp R         &kp T                          &kp Y  &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D  &kp F         &kp G      &none       &trans  &kp H  &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C  &kp V         &kp B      &trans      &trans  &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &mo 3  &kp LEFT_ALT  &kp SPACE  &mo 2       &mo 3   &mo 1                             &kp ESCAPE
            >;
        };

        Symbol {
            bindings = <
&kp EXCLAMATION  &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                    &kp CARET  &kp AMPERSAND      &kp UNDER                 &kp EQUAL         &kp NON_US_BACKSLASH
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &none      &none  &kp COLON  &kp PLUS           &kp LS(NON_US_BACKSLASH)  &kp LEFT_BRACKET  &kp SINGLE_QUOTE
&kp NUMBER_6     &kp N7        &kp N8        &kp N9        &kp N0       &none      &none  &none      &kp DOUBLE_QUOTES  &kp LEFT_BRACE            &kp UNDERSCORE    &kp SEMICOLON
&none            &none         &none         &none         &none        &none      &none  &none                                                                     &none
            >;
        };

        Num_Mouse {
            bindings = <
&kp COLON     &kp N7        &kp N8        &kp N9        &none                         &kp LC(W)       &kp LA(LEFT)    &kp LA(RIGHT)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)
&kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COMMA   &none      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW  &kp PAGE_UP
&none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &none      &none  &kp HOME        &mkp MB1        &mo 5          &mkp MB2         &kp PAGE_DOWN
&none         &none         &none         &none         &none       &none      &none  &none                                                           &none
            >;
        };

        Function {
            bindings = <
&kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none            &none                    &none  &kp F9  &kp F10  &kp F11  &kp F12
&none       &none              &none            &kp PRINTSCREEN  &none  &none      &none  &none  &kp F5  &kp F6   &kp F7   &kp F8
&none       &none              &none            &none            &none  &none      &none  &none  &kp F1  &kp F2   &kp F3   &kp F4
&none       &none              &none            &none            &none  &none      &none  &none                            &none
            >;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                    &kp LC(W)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)
&none  &none  &none  &none  &none  &none      &none  &none      &none               &none          &none            &none
&none  &none  &none  &none  &none  &none      &none  &none      &mkp MB1            &mo 5          &mkp MB2         &none
&none  &none  &none  &none  &none  &none      &none  &none                                                          &none
            >;
        };

        SCROLL {
            bindings = <
&none  &none  &none  &none  &none                    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none                       &none
            >;
        };

        layer_6 {
            bindings = <
&none  &none         &none         &none         &none                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none         &none         &none         &none  &none      &none        &none         &none         &none         &none         &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none  &none         &none         &none         &none  &none      &none        &none                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
