#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <1 3>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <11 13>;
        };

        aster {
            bindings = <&kp ASTERISK>;
            key-positions = <23 25>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <10 12>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <12 14>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };
    };

    macros {
        to0_kp: to0_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO0_KP";
        };
    };

    behaviors {
        lt_mo_to0_kp: lt_mo_to0_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "lt_mo_to0_kp";
            bindings = <&mo>, <&to0_kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R  &kp T                          &kp Y  &kp U  &lt 5 I    &kp O    &kp P
&kp A      &kp S         &kp D         &kp F  &kp G      &none       &trans  &kp H  &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C         &kp V  &kp B      &trans      &trans  &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mo 3  &kp SPACE  &mo 2       &mo 3   &mo 1                             &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Symbol {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp AMPERSAND  &kp SQT    &trans     &kp CARET       &kp NON_US_BACKSLASH
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans         &kp TILDE  &kp PIPE   &kp AT_SIGN     &kp COLON
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans         &trans     &kp GRAVE  &kp UNDERSCORE  &kp SEMICOLON
&trans           &trans             &trans    &trans      &trans       &trans      &trans  &trans                                               &trans
            >;
        };

        Num_Mouse {
            bindings = <
&trans        &kp N7        &kp N8        &kp N9        &trans                          &trans          &trans          &kp HOME      &trans           &trans
&kp NUMBER_0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COMMA   &trans      &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp END
&trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &trans      &trans  &kp PAGE_UP     &kp PAGE_DOWN   &mkp MB1      &trans           &mkp MB2
&trans        &trans        &trans        &trans        &trans      &trans      &trans  &trans                                                         &trans
            >;
        };

        Function {
            bindings = <
&kp K_MUTE  &kp LC(LS(C_VOL_DN))  &kp C_VOLUME_UP  &trans      &trans                          &trans  &kp F9  &kp F10  &kp F11  &kp F12
&trans      &trans                &trans           &trans      &trans      &trans      &trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8
&trans      &trans                &trans           &kp DELETE  &kp DELETE  &trans      &trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4
&trans      &trans                &trans           &trans      &trans      &trans      &trans  &trans                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
